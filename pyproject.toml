[project]
name = "fedrl"
version = "0.1.0"
description = "Clustered Federated Learning framework for chess"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "loguru>=0.7.3",
    "numpy>=2.3.3",
    "torch>=2.9.0.dev20250720",
    "torchaudio>=2.8.0.dev20250720",
    "torchvision>=0.24.0.dev20250720",
    "websockets>=12.0",
    "pyyaml>=6.0.0",
    "pandas>=2.3.3",
]

[project.optional-dependencies]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.10.0", 
    "pytest-timeout>=2.1.0",
    "pytest-cov>=4.0.0",
    "psutil>=5.9.0",
    "memory-profiler>=0.60.0"
]

dev = [
    "black>=23.0.0",
    "isort>=5.12.0", 
    "flake8>=6.0.0",
    "mypy>=1.0.0"
]

[tool.uv]
index-strategy = "unsafe-best-match"
extra-index-url = ["https://download.pytorch.org/whl/nightly/cu128"]

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = ["-v", "--strict-markers", "--disable-warnings", "--tb=short"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests", 
    "unit: marks tests as unit tests",
    "system: marks tests as system tests"
]

[tool.coverage.run]
source = ["server", "client", "common"]
omit = ["tests/*", "*/test_*.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__", 
    "raise AssertionError",
    "raise NotImplementedError"
]